---
# APIRule for exposing the service
apiVersion: gateway.kyma-project.io/v1beta1
kind: APIRule
metadata:
  labels:
    app: agent-backend
  name: agent-backend
  namespace: agent-debate-v4
spec:
  gateway: kyma-gateway.kyma-system.svc.cluster.local
  host: agent-debate-backend
  rules:
    - accessStrategies:
        - handler: allow
      methods:
        - GET
        - POST
        - PUT
        - PATCH
        - DELETE
        - HEAD
      path: /.*
  service:
    name: agent-backend
    port: 8080

---
# Deployment of the backend application
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: agent-backend
  name: agent-backend
  namespace: agent-debate-v4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agent-backend
  template:
    metadata:
      labels:
        app: agent-backend
    spec:
      containers:
        - image: jonathankong/agent-backend:v10 # Ensure this points to your backend image
          name: agent-backend
          ports:
            - name: http
              containerPort: 8080
          envFrom: # Ensure this matches the secret name you created earlier
            - secretRef:
                name: env-secrets
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 2Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            readOnlyRootFilesystem: false

---
# Service for the backend
apiVersion: v1
kind: Service
metadata:
  labels:
    app: agent-backend
  name: agent-backend
  namespace: agent-debate-v4
spec:
  ports:
    - name: http
      port: 8080
      targetPort: http
  selector:
    app: agent-backend

---
# # NetworkPolicy (if required for your setup)
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   labels: app:agent-backend
#   name: agent-debate-v4-network-policy
# spec:
#   podSelector:
#     matchLabels:
#       app: agent-debate-v4
#   policyTypes:
#     - Ingress
#   ingress:
#     - from:
#         - podSelector:
#             matchLabels:
#               app: istio-ingressgateway
#             namespaceSelector:
#               matchLabels:
#                 name: istio-system
